假设键 k1、k2 属于同个 bucket但此刻不存在，有两个进程进行调度，分别为 a , b;

进程a：设置k1，发现不存在后，准备分配entry在bucket尾部插入k1值；
进程b：设置k1，发现不存在后，准备分配entry在bucket尾部插入k1值；
       分配entry，在尾部插入k2值；
进程a：分配entry（但并未意识到 k2 的存在），在k2所在位置插入k1.

结果：虽然 k1、k2 都被插入，但是 k1 覆盖了 k2 ，引发了缺失。

原因就在于没有保证操作的原子性。